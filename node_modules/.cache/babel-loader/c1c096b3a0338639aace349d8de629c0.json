{"ast":null,"code":"export function calculateWinner(squares) {\n  const lines = [// [0, 1, 2],\n  // [3, 4, 5],\n  // [6, 7, 8],\n  // [0, 3, 6],\n  // [1, 4, 7],\n  // [2, 5, 8],\n  // [0, 4, 8],\n  // [2, 4, 6]\n  [0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15], [0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [0, 5, 10, 15], [3, 6, 9, 12]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/game/src/winner.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","d"],"mappings":"AACA,OAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AAErC,QAAMC,KAAK,GAAG,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAS,CAAT,CATU,EAUV,CAAC,CAAD,EAAI,CAAJ,EAAM,CAAN,EAAQ,CAAR,CAVU,EAWV,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,CAXU,EAYV,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAZU,EAaV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAbU,EAcV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAdU,EAeV,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,CAfU,EAgBV,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,CAhBU,EAiBV,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,CAjBU,EAkBV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAlBU,CAAd;;AAoBA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAASC,CAAT,IAAcN,KAAK,CAACC,CAAD,CAAzB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAAjE,IAAwEN,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACO,CAAD,CAAlG,EAAuG;AACnG,aAAOP,OAAO,CAACI,CAAD,CAAd;AACH;AACJ;;AACD,SAAO,IAAP;AACH","sourcesContent":["\nexport function calculateWinner(squares) {\n   \n    const lines = [\n        // [0, 1, 2],\n        // [3, 4, 5],\n        // [6, 7, 8],\n        // [0, 3, 6],\n        // [1, 4, 7],\n        // [2, 5, 8],\n        // [0, 4, 8],\n        // [2, 4, 6]\n        [0, 1, 2,3],\n        [4, 5,6,7],\n        [8,9,10,11],\n        [12,13,14,15],\n        [0,4,8,12],\n        [1,5,9,13],\n        [2,6,10,14],\n        [3,7,11,15],\n        [0,5,10,15],\n        [3,6,9,12]\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c,d] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]) {\n            return squares[a]\n        }\n    }\n    return null\n}\n\n"]},"metadata":{},"sourceType":"module"}